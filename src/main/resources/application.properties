spring.thymeleaf.suffix :.html  
spring.thymeleaf.cache=false 
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
s
spring.datasource.url=jdbc:postgres://pcqkaeebtkumit:7655eee90948a677a49ab5b2014f30115286c607b151512af7eb3d9b91eba734@ec2-34-200-106-49.compute-1.amazonaws.com:5432/d2e1u31alqem28
spring.datasource.username=pcqkaeebtkumit
spring.datasource.password=7655eee90948a677a49ab5b2014f30115286c607b151512af7eb3d9b91eba734

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#Spring Security login queries
security.basic.enabled=false
spring.queries.users-query=select email, password, '1' as enabled from auth_user where email=? and status='VERIFIED'
spring.queries.roles-query=select u.email, r.role_name from auth_user u inner join auth_user_role ur on(u.auth_user_id=ur.auth_user_id) inner join auth_role r on(ur.auth_role_id=r.auth_role_id) where u.email=?
